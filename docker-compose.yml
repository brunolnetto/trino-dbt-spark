version: "3.9"

services:

  de_mysql:
    image: "mariadb"
    container_name: de_mysql
    command: --max_connections=500
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    env_file:
      - .env
    networks:
      - data_network
      
  de_psql:
    image: postgres:15
    container_name: de_psql
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 30s
    volumes:
      - psql_data:/var/lib/postgresql/data
      - ./docker/psql/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - .env
    networks:
      - data_network

  minio:
    hostname: minio
    image: "minio/minio"
    container_name: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - minio_data:/data
    env_file:
      - .env
    networks:
      - data_network

  hive-metastore:
    build:
      context: ./docker/hive-metastore
      dockerfile: ./Dockerfile
    container_name: hive-metastore
    hostname: hive-metastore    
    healthcheck:
      test: ["CMD-SHELL", "jps | grep -q 'RunJar'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "9083:9083"
    env_file:
      - .env 
    volumes:
      - ./docker/hive-metastore/conf:/opt/hive/conf
    environment:
      METASTORE_DB_HOSTNAME: ${MYSQL_HOST}
      HIVE_CLASSPATH: /opt/hive/lib/mysql-connector-java-8.0.33.jar
    networks:
      - data_network
    depends_on:
      de_mysql:
        condition: service_healthy
      minio:
        condition: service_healthy

  trino:
    image: "trinodb/trino"
    container_name: trino
    hostname: trino
    depends_on:
      hive-metastore:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./docker/trino:/etc/trino
    networks:
      - data_network

  spark-master:
    build:
      context: ./docker/spark
      dockerfile: ./Dockerfile
    container_name: "spark-master"
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_IP=spark-master
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - "7077:7077"
    volumes:
      - ./docker/spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    networks:
      - data_network

  spark-worker:
    image: docker.io/bitnami/spark:3.3
    env_file:
      - .env
    volumes:
      - ./docker/spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s
    depends_on:
      - spark-master
    networks:
      - data_network
    deploy:
      replicas: 2

  spark-thrift-server:
    build:
      context: ./docker/spark
      dockerfile: ./Dockerfile
    container_name: "spark-thrift-server"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 10000 || (ps ax | grep -v grep | grep -q org.apache.hive.service.server.HiveServer2)"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 60s
    depends_on:
      - spark-master
      - hive-metastore
    ports:
      - "4040:4040"
      - "10000:10000"
    command: >
      sh -c "
        ./sbin/start-thriftserver.sh --driver-java-options '-Dhive.metastore.uris=thrift://hive-metastore:9083' --master spark://spark-master:7077
      "
    volumes:
      - ./docker/spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    networks:
      - data_network

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - 3000:3000
    env_file:
      - .env
    networks:
      - data_network
    depends_on:
      de_psql:
        condition: service_healthy
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  psql_data:
  mysql_data:
  minio_data:

networks:
  data_network:
    driver: bridge
    name: data_network
